#!/usr/bin/env ruby

# WARNING: Script is Linux/Cygwin-dependant

require 'fileutils'

# Utility functions
# =================

def nuxeoctlPath()
  if defined? NUXEO_PATH
    path = Dir[NUXEO_PATH + 'bin/nuxeoctl'][0]
  end
  if path == nil
    putHeader "ERROR: Is the Nuxeo path (in 'nuxeo-config.rb') defined correctly? Aborting."
    exit -1
  else
    return path
  end
end 

$firstHeader = true
def putHeader(title)
  title = ' ' + title + ' '
  if $firstHeader
    $firstHeader = false
  else
    puts
  end
  puts '=' * title.length
  puts title
  puts '=' * title.length
end

def runCommand(title, command, ignoreFailure=false)
  putHeader 'Running: ' + title + ''
  puts '> ' + command
  puts
  if !system(command) && !ignoreFailure
    putHeader 'ERROR: A command failed. Aborting.'
    raise 'failed system command'
  end
end

# Help screen
# ===========

def displayHelp()
  putHeader '"ow-nuxeo" Help'
  puts
  puts '* EXAMPLES'
  puts 'ow-nuxeo init'
  puts 'ow-nuxeo build'
  puts 'ow-nuxeo fastbuild deploy run'
  puts 'ow-nuxeo setversion 1.0.0'
  puts 'ow-nuxeo release'
  puts ''
  puts '* AVAILABLE GOALS > MAVEN BUILD'
  puts 'build          : Full build'
  puts 'fastbuild      : Full build, but skip the tests'
  puts 'fastestbuild   : Build only the changed code, skip the tests, run offline (note: it won\'t fetch the latest Nuxeo Studio plugin version)'
  puts 'test           : Run the Maven tests only, in debug mode'
  puts 'release        : Full build with the "release" profile enabled, to enable the use of the tagged Nuxeo Studio plugin'
  puts ''
  puts '* AVAILABLE GOALS > OTHER MAVEN-RELATED GOALS'
  puts 'init           : Starts a wizard to create a new Nuxeo project.'
  puts 'getversion     : Returns the current version of your project.'
  puts 'setversion [V] : Updates the project version (will be reflected on all modules of the root POM). Parameter [V] is the new version number.'
  puts ''
  puts '* AVAILABLE GOALS > SERVER CONTROL'
  puts 'deploy         : Deploy the marketplace package to your instance'
  puts 'run            : Run Nuxeo in console mode'
  puts 'reset          : Resets the data of your Derby/H2 server (if you\'re using an external database, it will only purge the binaries)'
  puts ''
  puts '* AVAILABLE GOALS > MISC'
  puts 'version        : Displays ow-nuxeo version'
  puts 'help           : Displays this screen'
  puts ''
end

if ARGV.empty? || ARGV[0] == 'help'
  displayHelp()
  exit 0
end

# Check ow-nuxeo requirements 
# ===========================

if ARGV[0] != 'init' && ARGV[0] != 'version'
  begin
    require './nuxeo-config.rb'
  rescue LoadError
    begin
      require './nuxeo-config.default.rb'
    rescue LoadError
      putHeader "ERROR: Neither 'nuxeo-config.rb' nor './nuxeo-config.default.rb' was found. Aborting."
      puts "Please create them by using the example below. Alternately, you can use 'ow-nuxeo init' to create a new project from scratch."
      puts ""
      puts "----------------------"
      puts "# Nuxeo location"
      puts "#NUXEO_PATH = '/home/username/nuxeo-cap-5.6.0-tomcat/'"
      puts ""
      puts "# Distrib config"
      puts "MARKETPLACE_PACKAGE_NAME = 'my-project'"
      puts "MARKETPLACE_PROJECT_PATH = './my-project-distribution'"
      puts "----------------------"
      exit -1
    end
    putHeader "WARNING: 'nuxeo-config.rb' is missing. Using default config."
  end
end

# Command loop
# ============

begin

ARGV.each do |arg|
  case arg
 
    # General commands
    # ================
 
    when 'help'
      displayHelp()
      
    when 'version'
      puts Gem.loaded_specs['ow-nuxeo'].full_name
      
    # Maven commands
    # ==============
      
    when 'test'
      runCommand('Maven tests', 'mvnDebug -DforkMode=never test')
      
    when 'build'
      runCommand('Full Maven build', 'mvn clean install')
      
    when 'fastbuild'
      runCommand('Maven build without tests', 'mvn clean install -DskipTests=true')
      
    when 'fastestbuild'
      runCommand('Offline Maven build without tests', 'mvn install -DskipTests=true -o')
    
    when 'getversion'
      File.open(MARKETPLACE_PROJECT_PATH + '/pom.xml') do |f|
        f.any? do |line|
          if line.include?('<version>')
            puts line.gsub(/ *<\/?version>/, '')
            break
          end
        end
      end
    
    when 'setversion'
      if !ARGV[1].nil?
        runCommand('Projects version update', 'mvn versions:set -DnewVersion=' + ARGV[1])
        break
      else
        puts "Usage: ow-nuxeo setversion [VERSION]"
      end
    
    when 'release'
	  begin
        runCommand('Maven build using matching Studio tag', 'mvn clean install -U -Prelease')
      rescue
		# DEPRECATED support
		puts "Maybe your project is using the old release system? Try 'ow-nuxeo release-deprecated'."
		exit -1;
      end
    
	# DEPRECATED support
    when 'release-deprecated'
        runCommand('Maven build using matching Studio tag (DEPRECATED)', 'mvn clean install -Drelease')
		putHeader("DEPRECATED: To switch to the new release format, set '<id>release</id>' in your release profile, and remove the 'activation' block.")
        
    # Nuxeo commands
    # ==============
    
    when 'deploy'
      nuxeoctlPath = nuxeoctlPath()
      system('chmod +x ' + nuxeoctlPath)
      
      runCommand('Uninstall package "' + MARKETPLACE_PACKAGE_NAME + '"',
        nuxeoctlPath + ' --accept=true --nodeps mp-remove ' + MARKETPLACE_PACKAGE_NAME, true)
      runCommand('Install new marketplace package', 
        nuxeoctlPath + ' --accept=true --nodeps mp-install ' + Dir[MARKETPLACE_PROJECT_PATH + '/target/' + MARKETPLACE_PROJECT_PATH.split('/').last + '-*.zip'][0])
     
    when 'run'
      command = nuxeoctlPath() + ' console'
      putHeader 'Launching Nuxeo in console mode'
      puts '> ' + command
      puts
      system(command)
    
    when 'reset'
	  putHeader 'Nuxeo data reset'
      if defined? NUXEO_PATH
		dataPath = NUXEO_PATH + 'nxserver/data/'
		deletePaths = Dir[dataPath + 'h2', dataPath + 'derby', dataPath + 'binaries', dataPath + 'elasticsearch']
	    if !deletePaths.nil? and deletePaths.size > 0
			puts "Folders to be deleted:"
			for path in deletePaths
				puts "- " + path
			end
			print "Confirm? (y/n, default is 'n') >> "
			case STDIN.gets.strip.downcase
				when 'y'
					puts '> Deleting Nuxeo data...'
					FileUtils.rm_r deletePaths, :force => true
					puts 'Done.'
				else
				  puts "Aborted."
			end
		else
		  puts 'Nothing to delete.'
		end
	  else
		puts "Nuxeo path not set, aborting."
	  end
      
    # Project generation
    # ==================
    
    when 'init'
      putHeader "Archetype build"
      archetype_path = File.expand_path(File.dirname(__FILE__) + "/../archetype")
      FileUtils.cp_r archetype_path, "tmp_archetype"
      system("mvn clean install -f ./tmp_archetype/pom.xml")
      FileUtils.rm_r "tmp_archetype"
      
      putHeader "Project information"
      projectInfo = {}
      
      puts "To instanciate the project, you are being asked a series of questions. You will be able to correct any mistake at the end."
      puts
      puts "[1/3] MAVEN INFORMATION"
      puts "-----------------------"
      while projectInfo['groupId'].to_s == ''
        print "Maven group ID (example: 'fr.openwide') >> "
        projectInfo['groupId'] = STDIN.gets.strip
      end
      while projectInfo['artifactId'].to_s == ''
        print "Maven artifact ID (example: 'my-project') >> "
        projectInfo['artifactId'] = STDIN.gets.strip
      end
      while projectInfo['name'].to_s == ''
        print "Project name (example: 'My Project') >> "
        projectInfo['name'] = STDIN.gets.strip
      end
      
      puts "\n[2/3] NUXEO INFORMATION"
      puts "-------------------------"
      while projectInfo['nuxeoVersion'].to_s == ''
        print "Target Nuxeo version (example: '5.6') >> "
        projectInfo['nuxeoVersion'] = STDIN.gets.strip
      end
      defaultModuleId = projectInfo['groupId'] + '.' + projectInfo['artifactId']
      print "[OPTIONAL] Module ID (default is '" + defaultModuleId + "') >> "
      projectInfo['nuxeoModuleId'] = STDIN.gets.strip
      if projectInfo['nuxeoModuleId'].to_s == ''
        projectInfo['nuxeoModuleId'] = defaultModuleId
      end
      defaultVendor = projectInfo['artifactId']
      print "[OPTIONAL] Vendor (default is '" + defaultVendor + "') >> "
      projectInfo['vendor'] = STDIN.gets.strip
      if projectInfo['vendor'].to_s == ''
        projectInfo['vendor'] = defaultVendor
      end
      print "[OPTIONAL] Are you using a Nuxeo Studio project? (y/n, default is 'n') >> "
      projectInfo['hasStudioProject'] = STDIN.gets.strip.downcase
      case projectInfo['hasStudioProject']
        when 'y'
          projectInfo['hasStudioProject'] = 'true'
        else
          projectInfo['hasStudioProject'] = 'false'
      end
      if projectInfo['hasStudioProject'] == 'true'
        puts "\nPlease look at your project's settings in Studio for the following variables."
        while projectInfo['studioProjectArtifactId'].to_s == ''
          print "Studio project ID (example: 'my-project-studio') >> "
          projectInfo['studioProjectArtifactId'] = STDIN.gets.strip
        end
        while projectInfo['studioProjectGroupId'].to_s == ''
          print "Studio project group ID (example: 'nuxeo-studio') >> "
          projectInfo['studioProjectGroupId'] = STDIN.gets.strip
        end
        
        puts "\nThe following variables are used to generate a sample ~/.m2/settings.xml."
        print "[OPTIONAL] Nuxeo Connect username >> "
        projectInfo['nuxeoConnectUsername'] = STDIN.gets.strip
        if !projectInfo['nuxeoConnectUsername'].nil?
          print "[OPTIONAL] Nuxeo Connect password >> "
          projectInfo['nuxeoConnectPassword'] = STDIN.gets.strip
        end
      else
        projectInfo['nuxeoConnectUsername'] = '';
        projectInfo['nuxeoConnectPassword'] = '';
      end 
      
      puts "\n\n[3/3] OPEN WIDE INFORMATION"
      puts "-------------------------------"
      print "Is this an Open Wide project? (y/n, default is 'n') >> "
      projectInfo['isOpenwideProject'] = STDIN.gets.strip.downcase
      projectInfo['isOpenwideProject'] = (projectInfo['isOpenwideProject'] == 'y') ? 'true' : 'false'
      if projectInfo['isOpenwideProject'] == 'true'
        puts "\nThe following variables are used to generate a sample ~/.m2/settings.xml."
        print "[OPTIONAL] Open Wide Maven username >> "
        projectInfo['openwideRepoUsername'] = STDIN.gets.strip
        if !projectInfo['openwideRepoUsername'].nil?
          print "[OPTIONAL] Open Wide Maven password >> "
          projectInfo['openwideRepoPassword'] = STDIN.gets.strip
        end
      end 
      
      putHeader "Summary"
      puts "Is everything correct? Press ENTER to continue, or type 'variable_name new_value' to change any value (eg. 'name my-project').\n"
      puts
      begin
        puts "------------"
        for key, value in projectInfo.each
          puts key + "=" + value.to_s
        end
        puts "------------"
        print "(press ENTER or set a variable) >> "
        confirm = STDIN.gets.strip
        if confirm.to_s != ''
          kv = confirm.split(' ')
          if !projectInfo[kv[0]].nil?
            projectInfo[kv[0]] = kv[1]
            puts "Key " + kv[0] + " updated\n"
          else
            puts "Key " + kv[0] + " doesn't exist\n"
          end
        end
      end while confirm.to_s != ''
      
      generationCommand = "mvn archetype:generate -DinteractiveMode=false -DarchetypeGroupId=fr.openwide.nuxeo -DarchetypeArtifactId=openwide-nuxeo-archetype -DarchetypeVersion=1.0.0-SNAPSHOT"
      for key, value in projectInfo.each
        generationCommand += " -D" + key + "=\"" + value.to_s + "\""
      end
      
      runCommand('Project generation', generationCommand);
      
      putHeader "COMPLETED!"
      puts "The project has been generated in './" + projectInfo['artifactId'].to_s + "'."
      puts "Please edit the Nuxeo path in './" + projectInfo['artifactId'].to_s + "/nuxeo-config.rb', then you're ready to go."
      
    else
      putHeader("Unknown goal '" + arg + "'.")
      
  end
  
end

rescue
	exit -1
end
